(use '[clojure.string :as str])

(def dna-to-rna {"A" "U" 
                "C" "G" 
                "G" "C" 
                "T" "A"})

(defn split-string [string]
    (str/split string #""))

(defn get-rna [dna rna]
    (if (= (count dna) 0) rna
        (do
            ;(println dna rna)
            (get-rna (rest dna) (str rna (dna-to-rna (first dna)))))))

(println (get-rna (split-string "GCTA") ""))
(println (get-rna (split-string "G C T A") ""))
(println (get-rna (split-string "AATAAGGACC") ""))
;(println (get-rna (split-string "ACCAAATCCGCATGTTACAGGACTTCTTATAAATTCTTTTTTCGTGGGGAGCAGCGGATCTTAATGGATGGCGCCAGCTGGTATGGAAGCTAATAGCGCCGGTGAGAGGGTAATCAGCCGTCTCCACCAACACAACGCTATCGGGTCATATTATAAGATTCCGCAATGGGACTACTTATAGGTTGCCTTAACGATATCCGCAACTTGCGATGTGCCTGCTATGCTTAAATACATACCTCGCCCAGTAGCTTTCCAATATGGGAACATCAATTGTACATCGGGCCGGGATAATCATGTCGTCACGGAACTTACTGTAAGAGTAATAATTCAAAAGAGATGTCGGTTTGCTAGTTCACGTAAAGGTGCCTCGCGCCACCTCTAAGTAAGTGAGCCGTCGAGACATTATCCCTGATTTTCTCACTACTATTAGTACTCACGGCGCAATACCACCACAGCCTTGTCTCGCCAGAATGCCGGTCAGCATATGGAAGAGCTCAAGGCAGGTCAATTCGCACTGTGAGGGTCACATGGGCGTTTGGCACTACCGACACGAACCTCAGTTAGCGTACATCCTACCAGAGGTCTGTGGCCCCGTGGTCAAAAGTGCGGGTTTCGTATTTGCTGCTCGTCTGTACTTTCAGAATCTTGACCTGCACGGCAAAGAGACGCTTTTTATGGAGCTCGACATGGCAACAACGCGACGGATCTACGTCACAACGAGAATAGTGTAAACGAAGCTGCTGACGGCGGAAGCGACATAGGGATCTGTGAGTTGTTATTCGCGAAAAACATCCGTCCCCGTGGGGGATAGTCACTGACGCGGTTTTGTAGAAGCCTAGGGGAACAGGTTAGTTTGACTAGCTTAAGAATGTAAATTCTGGGATTATACTGTAGTAATCACTAATTAACGGTGAGGGTTTTAAGACGGATCTTTGCAAATTCAAGCGAGGTGATTTCAACAAATTTTGCTGATGGTTTAGGCGTACAATCCCCTAAAGTA") ""))
(println (get-rna (split-string "TTATGACGTTATTCTACTTTGATTGTGCGAGACAATGCTACCTTACCGGTCGGAACTCGATCGGTTGAACTCTATCACGCCTGGTCTTCGAAGTTAGCAC") ""))